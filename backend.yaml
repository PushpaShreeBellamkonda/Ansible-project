- name: configure backend server
  become: yes
  hosts: backend
  vars:
    login_host: 3.95.176.159
    login_password: ExpenseApp@1
  tasks:
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs and mysql-server
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: installed
      loop:
        - nodejs
        - mysql

    - name: start mysql service
      ansible.builtin.systemd:
        name: mysqld
        state: started
        enabled: yes

    - name: ensure bind-address is set to 0.0.0.0 for remote connections
      ansible.builtin.lineinfile:
        path: /etc/my.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
      notify:
        - restart mysql

    - name: open MySQL port in firewall
      ansible.builtin.firewalld:
        port: 3306/tcp
        permanent: yes
        state: enabled
      become: yes

    - name: restart mysql service
      ansible.builtin.systemd:
        name: mysqld
        state: restarted

    - name: grant MySQL privileges for remote access
      ansible.builtin.mysql_user:
        name: root
        host: '%'
        password: "{{ login_password }}"
        priv: '*.*:ALL'
        state: present
      become: yes

    - name: create database if not exists
      community.mysql.mysql_db:
        name: all
        state: present
        login_user: root
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"

    - name: import data into mysql
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        state: import
        name: all

    - name: start and enable backend service
      ansible.builtin.service:
        name: backend
        state: started
        enabled: yes
